name: Run tests

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_TEST_PASSWORD }}
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      POSTGRES_USER: postgres
      POSTGRES_DB: github_actions
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_TEST_PASSWORD }}
      POSTGRES_HOST: '127.0.0.1'

    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run PyLint
        run: pylint --rcfile=.pylintrc --ignore=migrations social_network/posts/
      - name: Run tests
        run: |
          cd social_network
          python manage.py test
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USER }}/social-network:latest
      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_USER }}/social-network:latest